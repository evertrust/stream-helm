{
    "title": "Chart Values",
    "type": "object",
    "properties": {
        "kubeVersion": {
            "type": "string",
            "description": "Force target Kubernetes version (using Helm capabilities if not set)",
            "default": ""
        },
        "nameOverride": {
            "type": "string",
            "description": "String to partially override horizon.fullname",
            "default": ""
        },
        "fullnameOverride": {
            "type": "string",
            "description": "String to fully override horizon.fullname",
            "default": ""
        },
        "imageRegistry": {
            "type": "string",
            "description": "String to override the image registry for all containers",
            "default": ""
        },
        "commonLabels": {
            "type": "object",
            "description": "Labels to add to all deployed objects",
            "default": {}
        },
        "commonAnnotations": {
            "type": "object",
            "description": "Annotations to add to all deployed objects",
            "default": {}
        },
        "image": {
            "type": "object",
            "properties": {
                "registry": {
                    "type": "string",
                    "description": "Horizon image registry",
                    "default": "registry.evertrust.io"
                },
                "repository": {
                    "type": "string",
                    "description": "Horizon image repository",
                    "default": "stream"
                },
                "tag": {
                    "type": "string",
                    "description": "Horizon image tag (immutable tags are recommended)",
                    "default": "2.3.0"
                },
                "pullPolicy": {
                    "type": "string",
                    "description": "Horizon image pull policy",
                    "default": "IfNotPresent"
                },
                "pullSecrets": {
                    "type": "array",
                    "description": "Horizon image pull secrets",
                    "default": []
                }
            }
        },
        "updateStrategy": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Horizon deployment strategy type",
                    "default": "RollingUpdate"
                },
                "rollingUpdate": {
                    "type": "object",
                    "properties": {
                        "maxSurge": {
                            "type": "number",
                            "description": "",
                            "default": 1
                        },
                        "maxUnavailable": {
                            "type": "number",
                            "description": "",
                            "default": 0
                        }
                    }
                }
            }
        },
        "priorityClassName": {
            "type": "string",
            "description": "Horizon pod priority class name",
            "default": ""
        },
        "hostAliases": {
            "type": "array",
            "description": "Horizon pod host aliases",
            "default": []
        },
        "extraVolumes": {
            "type": "array",
            "description": "Optionally specify extra list of additional volumes for Horizon pods",
            "default": []
        },
        "extraVolumeMounts": {
            "type": "array",
            "description": "Optionally specify extra list of additional volumeMounts for Horizon container(s)",
            "default": []
        },
        "sidecars": {
            "type": "array",
            "description": "Add additional sidecar containers to the Horizon pod",
            "default": []
        },
        "lifecycleHooks": {
            "type": "object",
            "description": "Add lifecycle hooks to the Horizon deployment",
            "default": {}
        },
        "podLabels": {
            "type": "object",
            "description": "Extra labels for Horizon pods",
            "default": {}
        },
        "podAnnotations": {
            "type": "object",
            "description": "Annotations for Horizon pods",
            "default": {}
        },
        "podAffinityPreset": {
            "type": "string",
            "description": "Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
            "default": ""
        },
        "podAntiAffinityPreset": {
            "type": "string",
            "description": "Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
            "default": "soft"
        },
        "nodeAffinityPreset": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "key": {
                    "type": "string",
                    "description": "Node label key to match. Ignored if `affinity` is set",
                    "default": ""
                },
                "values": {
                    "type": "array",
                    "description": "Node label values to match. Ignored if `affinity` is set",
                    "default": []
                }
            }
        },
        "affinity": {
            "type": "object",
            "description": "Affinity for pod assignment",
            "default": {}
        },
        "nodeSelector": {
            "type": "object",
            "description": "Node labels for pod assignment",
            "default": {}
        },
        "tolerations": {
            "type": "array",
            "description": "Tolerations for pod assignment",
            "default": []
        },
        "resources": {
            "type": "object",
            "properties": {
                "requests": {
                    "type": "object",
                    "properties": {
                        "memory": {
                            "type": "string",
                            "description": "",
                            "default": "512Mi"
                        },
                        "cpu": {
                            "type": "string",
                            "description": "",
                            "default": "300m"
                        }
                    }
                }
            }
        },
        "podSecurityContext": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enabled Horizon pods' Security Context",
                    "default": true
                },
                "fsGroup": {
                    "type": "number",
                    "description": "Set Horizon pod's Security Context fsGroup",
                    "default": 1001
                }
            }
        },
        "containerSecurityContext": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enabled Horizon containers' Security Context",
                    "default": true
                },
                "runAsUser": {
                    "type": "number",
                    "description": "Set Horizon container's Security Context runAsUser",
                    "default": 1001
                },
                "runAsNonRoot": {
                    "type": "boolean",
                    "description": "Set Horizon container's Security Context runAsNonRoot",
                    "default": true
                }
            }
        },
        "livenessProbe": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable livenessProbe",
                    "default": true
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Initial delay seconds for livenessProbe",
                    "default": 0
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Period seconds for livenessProbe",
                    "default": 10
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Timeout seconds for livenessProbe",
                    "default": 5
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Failure threshold for livenessProbe",
                    "default": 3
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Success threshold for livenessProbe",
                    "default": 1
                }
            }
        },
        "startupProbe": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable startupProbe. Since Horizon is slow to start, this is highly recommended.",
                    "default": true
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Period seconds for startupProbe",
                    "default": 3
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Failure threshold for startupProbe",
                    "default": 60
                }
            }
        },
        "readinessProbe": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable readinessProbe",
                    "default": true
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Initial delay seconds for readinessProbe",
                    "default": 0
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Period seconds for readinessProbe",
                    "default": 5
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Timeout seconds for readinessProbe",
                    "default": 3
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Failure threshold for readinessProbe",
                    "default": 3
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Success threshold for readinessProbe",
                    "default": 1
                }
            }
        },
        "horizontalAutoscaler": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable Horizontal POD autoscaling for Horizon",
                    "default": false
                },
                "minReplicas": {
                    "type": "number",
                    "description": "Minimum number of Horizon replicas",
                    "default": 1
                },
                "maxReplicas": {
                    "type": "number",
                    "description": "Maximum number of Horizon replicas",
                    "default": 3
                },
                "targetCPU": {
                    "type": "number",
                    "description": "Target CPU utilization percentage",
                    "default": 50
                },
                "targetMemory": {
                    "type": "number",
                    "description": "Target Memory utilization percentage",
                    "default": 50
                }
            }
        },
        "disruptionBudget": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Created a PodDisruptionBudget",
                    "default": false
                },
                "minAvailable": {
                    "type": "number",
                    "description": "Min number of pods that must still be available after the eviction",
                    "default": 1
                },
                "maxUnavailable": {
                    "type": "number",
                    "description": "Max number of pods that can be unavailable after the eviction",
                    "default": 0
                }
            }
        },
        "environment": {
            "type": "array",
            "description": "Extra env vars passed to the Horizon pods",
            "default": []
        },
        "service": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Kubernetes service type",
                    "default": "ClusterIP"
                },
                "clusterIP": {
                    "type": "string",
                    "description": "Horizon service clusterIP IP",
                    "default": ""
                },
                "loadBalancerIP": {
                    "type": "string",
                    "description": "for the Horizon Service (optional, cloud specific)",
                    "default": ""
                },
                "loadBalancerSourceRanges": {
                    "type": "array",
                    "description": "Address that are allowed when service is LoadBalancer",
                    "default": []
                },
                "externalTrafficPolicy": {
                    "type": "string",
                    "description": "Enable client source IP preservation",
                    "default": "Cluster"
                },
                "annotations": {
                    "type": "object",
                    "description": "Annotations for Horizon service",
                    "default": {}
                }
            }
        },
        "ingress": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Set to true to enable ingress record generation",
                    "default": false
                },
                "type": {
                    "type": "string",
                    "description": "Automatically configure your ingress for an ingress controller. Accepted values are nginx, traefik. This will override the clientCertificateHeader if set, and generate annotations, resources, and ingresses resources to ensure Horizon works correctly.",
                    "default": ""
                },
                "clientCertificateAuth": {
                    "type": "boolean",
                    "description": "When ingress.type is set, determines whether the ingress controller should request client certificates.",
                    "default": false
                },
                "scepCompatibilityMode": {
                    "type": "boolean",
                    "description": "Adds a secondary ingress for SCEP support over HTTP",
                    "default": false
                },
                "ingressClassName": {
                    "type": "string",
                    "description": "IngressClass that will be used to implement the Ingress (Kubernetes 1.18+)",
                    "default": ""
                },
                "hostname": {
                    "type": "string",
                    "description": "Default host for the ingress resource",
                    "default": "horizon.local"
                },
                "path": {
                    "type": "string",
                    "description": "Default path for the ingress record",
                    "default": "/"
                },
                "pathType": {
                    "type": "string",
                    "description": "Ingress path type",
                    "default": "Prefix"
                },
                "annotations": {
                    "type": "object",
                    "description": "Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.",
                    "default": {}
                },
                "tls": {
                    "type": "boolean",
                    "description": "Enable TLS configuration for the hostname defined at ingress.hostname parameter",
                    "default": false
                },
                "extraHosts": {
                    "type": "array",
                    "description": "The list of additional hostnames to be covered with this ingress record.",
                    "default": []
                },
                "extraPaths": {
                    "type": "array",
                    "description": "An array with additional arbitrary paths that may need to be added to the ingress under the main host",
                    "default": []
                },
                "extraTls": {
                    "type": "array",
                    "description": "The tls configuration for additional hostnames to be covered with this ingress record.",
                    "default": []
                },
                "extraRules": {
                    "type": "array",
                    "description": "Additional rules to be covered with this ingress record",
                    "default": []
                }
            }
        },
        "license": {
            "type": "object",
            "properties": {
                "secretName": {
                    "type": "string",
                    "description": "Existing secret name where the Horizon license is stored",
                    "default": ""
                },
                "secretKey": {
                    "type": "string",
                    "description": "Existing secret key where the Horizon license is stored",
                    "default": ""
                }
            }
        },
        "vaults": {
            "type": "array",
            "description": "",
            "items": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": ""
                    },
                    "vault_type": {
                        "type": "string",
                        "description": ""
                    },
                    "master_password": {
                        "type": "object",
                        "description": ""
                    }
                }
            }
        },
        "vault": {
            "type": "object",
            "properties": {
                "configuration": {
                    "type": "string",
                    "description": "Name of the vault used for configuration purposes",
                    "default": "default"
                },
                "escrow": {
                    "type": "string",
                    "description": "Name of the vault used for escrowing purposes",
                    "default": "default"
                },
                "transient": {
                    "type": "string",
                    "description": "Name of the vault used for storing transient keys",
                    "default": "default"
                }
            }
        },
        "allowedHosts": {
            "type": "array",
            "description": "Additional allowed hosts.",
            "default": [
                "localhost:9000"
            ]
        },
        "trustedProxies": {
            "type": "array",
            "description": "Trusted proxies.",
            "default": [
                "0.0.0.0/0",
                "::/0"
            ]
        },
        "events": {
            "type": "object",
            "properties": {
                "chainsign": {
                    "type": "boolean",
                    "description": "Whether Horizon events should be signed and chained using the event seal secret.",
                    "default": true
                },
                "ttl": {
                    "type": "string",
                    "description": "Duration during which events are kept in database.",
                    "default": "90 days"
                },
                "discoveryTtl": {
                    "type": "string",
                    "description": "Duration during which discovery events are kept in database.",
                    "default": "30 days"
                }
            }
        },
        "mailer": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string",
                    "description": "SMTP host",
                    "default": ""
                },
                "port": {
                    "type": "number",
                    "description": "SMTP host port",
                    "default": 587
                },
                "tls": {
                    "type": "boolean",
                    "description": "Enable TLS for this SMTP host",
                    "default": true
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Enable SSL for this SMTP host",
                    "default": false
                },
                "user": {
                    "type": "string",
                    "description": "Authentication username for this SMTP host",
                    "default": ""
                }
            }
        },
        "logback": {
            "type": "object",
            "properties": {
                "loggers": {
                    "type": "array",
                    "description": "",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": ""
                            },
                            "level": {
                                "type": "string",
                                "description": ""
                            }
                        }
                    }
                },
                "level": {
                    "type": "string",
                    "description": "Global level below wich messages will not be logged",
                    "default": "debug"
                },
                "pattern": {
                    "type": "string",
                    "description": "Log messages pattern",
                    "default": "%date{yyyy-MM-dd HH:mm:ss} - [%logger] - [%level] - %message%n%xException{full}"
                }
            }
        },
        "leases": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether leases should be used when launching multiple replicas of Horizon pods. This requires the leases.akka.io CRD to be installed.",
                    "default": true
                }
            }
        },
        "clientCertificateHeader": {
            "type": "string",
            "description": "Indicates to Horizon in which header the client certificate will be passed. If not set, Horizon will try to guess the best parsing technique, depending on the ingress.type you specified.",
            "default": ""
        },
        "mongodb": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to deploy a mongodb server to satisfy the application database requirements. To use an external database set this to false and configure the `externalDatabase.uri` parameter",
                    "default": true
                },
                "architecture": {
                    "type": "string",
                    "description": "MongoDB architecture (`standalone` or `replicaset`)",
                    "default": "standalone"
                },
                "initdbScriptsConfigMap": {
                    "type": "string",
                    "description": "",
                    "default": "horizon-database-init-scripts"
                },
                "auth": {
                    "type": "object",
                    "properties": {
                        "rootPassword": {
                            "type": "string",
                            "description": "MongoDB admin password",
                            "default": ""
                        },
                        "username": {
                            "type": "string",
                            "description": "MongoDB custom user",
                            "default": "horizon"
                        },
                        "database": {
                            "type": "string",
                            "description": "MongoDB custom database",
                            "default": "horizon"
                        },
                        "password": {
                            "type": "string",
                            "description": "MongoDB custom password",
                            "default": "secret_password"
                        }
                    }
                },
                "horizon": {
                    "type": "object",
                    "properties": {
                        "init": {
                            "type": "boolean",
                            "description": "Set this to true to initialize the local database for Horizon. This only works when `mongodb.enabled` is set to true.",
                            "default": true
                        },
                        "username": {
                            "type": "string",
                            "description": "Administration username used when initializing the database",
                            "default": "administrator"
                        },
                        "passwordHash": {
                            "type": "string",
                            "description": "Password hash used when initializing the database. Default: horizon",
                            "default": "$6$8JDCzmb9XDpOwtGQ$7.kRdgIjPYR/AxPbzKsdkBH3ouCgFbqyH9csjcr5qIoIXK/f2L6bQYQRhi9sdQM4eBm8sGUdEkg.TVOQ1MRsA/"
                        }
                    }
                }
            }
        },
        "upgrade": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "If true, an upgrade job will be run when upgrading the release, modifying your database schema. This works even if `mongodb.enabled` is set to false.",
                    "default": true
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "description": "Horizon image registry",
                            "default": "registry.evertrust.io"
                        },
                        "repository": {
                            "type": "string",
                            "description": "Horizon image repository",
                            "default": "horizon-upgrade"
                        },
                        "tag": {
                            "type": "string",
                            "description": "Horizon image tag (immutable tags are recommended)",
                            "default": "2.3.0"
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "Horizon image pull policy",
                            "default": "IfNotPresent"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "description": "Horizon image pull secrets",
                            "default": []
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "properties": {
                                "memory": {
                                    "type": "string",
                                    "description": "",
                                    "default": "512Mi"
                                },
                                "cpu": {
                                    "type": "string",
                                    "description": "",
                                    "default": "500m"
                                }
                            }
                        }
                    }
                },
                "from": {
                    "type": "string",
                    "description": "Sets to the version you're upgrading from. If empty, the chart will try to infer the version from the database.",
                    "default": ""
                },
                "to": {
                    "type": "string",
                    "description": "Sets the version you're upgrading to. If empty, the chart will use Chart.AppVersion.",
                    "default": ""
                }
            }
        }
    }
}