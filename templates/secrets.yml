{{- $name := (include "common.names.fullname" .) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $name }}
  labels: {{- include "stream.labels.standard" . | nindent 4 }}
  {{- if .Values.commonLabels }}
  {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
  {{- end }}
type: Opaque
data:
  {{- if not .Values.appSecret.secretKey }}
  appSecret: {{ include "common.secrets.lookup" (dict "secret" $name "key" "appSecret" "defaultValue" (randAlphaNum 32) "context" $) }}
  {{- end }}

  {{- if and .Values.mongodb.enabled (not .Values.externalDatabase.secretKey) }}
  mongoUri: {{ printf "mongodb://%s:%s@%s.%s.svc.cluster.local/%s" .Values.mongodb.auth.username .Values.mongodb.auth.password (include "stream.mongodb.fullname" .) .Release.Namespace .Values.mongodb.auth.database | b64enc | quote }}
  {{- end }}

  {{- if and .Values.events.chainsign (not .Values.events.secretKey) }}
  eventSealSecret: {{ include "common.secrets.passwords.manage" (dict "secret" $name "key" "eventSealSecret" "length" 32 "providedValues" (list) "context" $) }}
  {{- end }}